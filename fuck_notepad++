for python:

keybinding: 
[
		{ "keys": ["alt+q"], "command": "build" },
		{ "keys": ["ctrl+backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Line.sublime-macro"} },
		{ "keys": ["f2"], "command": "goto_definition" },
		{"keys": ["ctrl+alt+up"], "command": "goto_definition"},
        { "keys": ["ctrl+alt+left"], "command": "jump_back" },
        { "keys": ["ctrl+alt+right"], "command": "jump_forward" },
]

setting:
{
	"color_scheme": "Packages/Color Scheme - Default/Monokai.tmTheme",
	"default_encoding": "UTF-8",
	"draw_white_space": "all",
	"ensure_newline_at_eof_on_save": true,
	"font_size": 11,
	"ignored_packages":
	[
		"Vintage"
	],
	"rulers":
	[
		120
	],
	"tab_size": 4,
	"translate_tabs_to_spaces": true,
	"trim_trailing_white_space_on_save": true
}

packages:
SideBarEnhancements, Anaconda 

Sublime -> Preferences -> Package Settings -> Anaconda -> Settings User  ->  {"anaconda_linting": false}



















for c++:

build system:

{
 "file_regex": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
 "working_dir": "${file_path}",
 "selector": "source.c, source.c++",
 "shell": true,
 "encoding":"utf-8",

 "cmd": ["del", "${file_base_name}.exe", "&&", "g++", "-Wall", "-std=c++11", "${file}", "-o", "${file_path}/${file_base_name}", "&&", "start", "cmd", "/c", "${file_base_name} && echo. && pause"],
 }

key binding:
[
		{ "keys": ["alt+`"], "command": "build" },
		{ "keys": ["ctrl+backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Line.sublime-macro"} },
		{ "keys": ["f2"], "command": "goto_definition" },

]


packages for sublime text:
BracketHighlighter, DocBlockr, easyClang_complete

The clangcomplete has the issue of not finding the isostream of gcc if you use it on windows. Try to include the iostream folder in the 
common flags in easyclangcomplete's setting.

Turn off the use_libclang option in easyClangComplete, cause it pops out error and cannot find the definition of cout, endl etc.
